# .coveragerc to control coverage.py
[run]


omit =
    # omit anything in a .local directory anywhere
    */.local/*
    # omit everything in /User
    /User/*
    # omit this single file
    utils/tirefire.py
    *catalog\__init__.py
    *catalog\admin.py
    *catalog\tests
    *catalog\apps.py
    *catalog\forms.py
    *catalog\migrations\0001_initial.py
    *catalog\migrations\0002_rename_date_of_deacth_author_date_of_death.py
    *catalog\migrations\0003_bookinstance_borrower.py
    *catalog\migrations\0004_alter_bookinstance_options.py
    *catalog\migrations\0005_alter_author_options.py
    *catalog\migrations\__init__.py
    *catalog\models.py
    *catalog\tests\__init__.py
    *catalog\tests\test_models.py
    *catalog\urls.py
    *catalog\views.py
    *catalog\apps.py
    *catalog\manage.py
    *locallibrary\__init__.py
    *locallibrary\asgi.py
    *locallibrary\settings.py
   *locallibrary\urls.py
    *locallibrary\wsgi.py
    *manage.py
branch = True

[report]
# Regexes for lines to exclude from consideration

exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't complain about abstract methods, they aren't run:
    @(abc\.)?abstractmethod

ignore_errors = True
[html]
directory = coverage_html_report